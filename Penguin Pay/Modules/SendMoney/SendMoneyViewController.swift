    //
    //  SendMoneyViewController.swift
    //  Penguin Pay
    //
    //  Created by John Edwin Guerrero Ayala on 16/02/22.
    //  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
    //
    //  This file was generated by the 🐍 VIPER generator
    //

import UIKit

final class SendMoneyViewController: UIViewController {
    
        // MARK: - UIKit elements -
    
    @IBOutlet weak var firstNameTextField: UITextField!
    @IBOutlet weak var lastNameTextField: UITextField!
    @IBOutlet weak var countryTextField: UITextField!
    @IBOutlet weak var phoneCodeLabel: UILabel!
    @IBOutlet weak var phoneTextField: UITextField!
    @IBOutlet weak var amountTextField: UITextField!
    @IBOutlet weak var expectedAmountLabel: UILabel!
    @IBOutlet weak var sendMoneyButton: UIButton!
    var countryPickerView = UIPickerView()
    
        // MARK: - Public properties -
    
    var presenter: SendMoneyPresenterInterface!
    let allowedCharacters = CharacterSet(charactersIn:"01").inverted
    lazy var countries: [Country] = presenter.countries
    
        // MARK: - Private properties -
    
    private var phoneNumberLimit = 9
    
        // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupCountryTextField()
        loadPresenter()
        sendMoneyButton.isEnabled = false
        presenter.viewDidLoad()
    }
    
    func loadPresenter() {
        guard (presenter != nil) else {
            _ = SendMoneyWireframe.init(moduleViewController: self)
            return
        }
    }
    
    fileprivate func setupCountryTextField() {
        countryTextField.inputView = countryPickerView
        countryPickerView.delegate = self
        countryPickerView.dataSource = self
    }
    
        // MARK: - IBActions -
    
    @IBAction func textFieldEditingChanged(_ sender: UITextField) {
        defer {
            presenter.updateSendingButtonState()
        }
        guard let text = sender.text else { return }
        switch sender {
            case firstNameTextField:
                presenter.recipientFirstName = text
            case lastNameTextField:
                presenter.recipientLastName = text
            case phoneTextField:
                presenter.recipientPhoneNumber = text
            case amountTextField:
                presenter.recipientAmount = text
            default:
                return
        }
    }
    
    @IBAction func sendMoneyButtonTapped(_ sender: Any) {
        presenter.sendPayment()
    }
}

    // MARK: - Extensions -

extension SendMoneyViewController: SendMoneyViewInterface {
    func updateSendButtonState(_ enabled: Bool) {
        sendMoneyButton.isEnabled = enabled
    }
    
    func updateRecipientForm(withCountry country: Country) {
        defer {
            presenter.updateSendingButtonState()
        }
        countryTextField.text = country.name
        phoneCodeLabel.text = country.phonePrefix
        phoneNumberLimit = country.digitsAfterPrefix
        phoneTextField.text = ""
        presenter.recipientPhoneNumber = ""
        
        guard let amount = amountTextField.text else { return }
        presenter.updateRecipientExchange(to: country.code, amount: amount)
    }
    
    func updateRecipientForm(withAmount amount: String) {
        expectedAmountLabel.text = amount
    }
    
    func resetView() {
        firstNameTextField.text = ""
        lastNameTextField.text = ""
        amountTextField.text = ""
        phoneTextField.text = ""
    }
}

extension SendMoneyViewController: UIPickerViewDelegate {
    fileprivate func didSelectCountry(_ row: Int) {
        presenter.selectedCountry = countries[row]
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        didSelectCountry(row)
        countryTextField.resignFirstResponder()
    }
}

extension SendMoneyViewController: UIPickerViewDataSource {
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
    
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return countries.count
    }
    
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        return "\(countries[row].phonePrefix) - \(countries[row].name)"
    }
}

extension SendMoneyViewController: UITextFieldDelegate {
    
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        
        switch textField {
            case amountTextField:
                let components = string.components(separatedBy: allowedCharacters)
                let filtered = components.joined(separator: "")
                if string == filtered {
                    return true
                } else {
                    return false
                }
            case phoneTextField:
                let currentText = textField.text ?? ""
                guard let stringRange = Range(range, in: currentText) else { return false }
                let updatedText = currentText.replacingCharacters(in: stringRange, with: string)
                return updatedText.count <= phoneNumberLimit
            default:
                return true
        }
    }
    
}
